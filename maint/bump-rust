#!/usr/bin/env bash
# TODO: could add guessed subdir into S in ebuild?
. /lib/gentoo/functions.sh || { echo "Could not find gentoo-functions' functions.sh!" ; exit 1; }
. "$(pkg-config iwdevtools --variable=atomf)" || { eerror "Could not find iwdevtools' atomf library! Emerge app-portage/iwdevtools?" ; exit 1; }

if [[ ${BASH_SOURCE} == */* ]]; then
	SCRIPT_DIR=${BASH_SOURCE%/*}/
else
	SCRIPT_DIR=./
fi

ORIGINAL_PWD=$(pwd)

${SCRIPT_DIR}/bump-generic "$@" || {
	case $? in
		3)
			ewarn "Continuing as re-generation of CRATES may be desired."
			;;
		*)
			exit $?
			;;
	esac
}

cd ${1} || exit 1
atomset "${1}-${2}"

ebuild=${P}.ebuild

# Now do the Rust-specific bits.
#
# 1. remove the CRATES stuff
einfo "Removing CRATES=..."
if grep -q "CRATES=" ${ebuild} ; then
	if grep -qe 'CRATES=".*"' ${ebuild} ; then
		sed -i -e '/CRATES=/d' ${ebuild} || exit 1
	else
		sed -i -e '/CRATES="/,/"/d' ${ebuild} || exit 1
	fi
fi

# ... but put in a dummy line for now.
# We can't do a blank one (eclass will die), so let's do ${P} which usually works.
# (Can try ${P} if this fails for some reason)
sed -i -e '/^EAPI=.*/a\\nCRATES=" "' ${ebuild} || exit 1

# 2. sed out the dep tarball line if there is one, so we can fetch.
einfo "Sedding out 'crates' tarball line if exists"
sed -i -E "/^(\t+)?SRC_URI.*crates/ s/^/#/" ${ebuild} || exit 1

if grep -q -Fe 'https://github.com/gentoo-crate-dist' ${ebuild}; then
	ewarn "Detected usage of gentoo-crate-dist, won't create crates tarball"
	EXISTING_CRATES_TARBALL=1
	PYCARGOEBUILD_EXTRA_ARGS=( --no-write-crate-tarball )
fi

# 3. Fetch!
einfo "Fetching ${P}"
ebuild ${ebuild} manifest || exit 1

# 4. Unpack then fetch Rust deps
einfo "Unpacking ${P}"

# (We want to own this place)
export PORTAGE_TMPDIR="$(mktemp -d)"
export PORTAGE_USERNAME="$(whoami)"
export PORTAGE_WORKDIR_MODE="775"
ebuild ${ebuild} clean unpack || exit 1

# Borrowed from mgorny-dev-tools' pkgdiff
export S=$(sed -nr 's/^declare -x S="(.*)"/\1/p' "${PORTAGE_TMPDIR}"/portage/${CATEGORY}/${PF}/temp/environment)

ebegin "Running 'pycargoebuild -i ${ebuild} -c ${S}'"
pycargoebuild -i ${ebuild} -c ${S} "${PYCARGOEBUILD_EXTRA_ARGS[@]}" || exit 1
eend $? || exit 1

# 5. Undo the sed we did earlier to the ebuild
cd ${ORIGINAL_PWD}/${CATEGORY}/${PN} || exit 1
einfo "Unsedding deps line in ebuild"
sed -i -e "/^#SRC_URI.*crates/ s/^#//" ${ebuild} || exit 1

einfo "Generating manifest"
ebuild ${ebuild} clean manifest || exit 1

einfo "All done."

if [[ -z ${EXISTING_CRATES_TARBALL} ]]; then
	einfo "Dep tarball now at: $(portageq distdir)/${P}-crates.tar.xz!"
	rsync --mkpath -av -P "$(portageq distdir)/${P}-crates.tar.xz" dev.gentoo.org:~/public_html/distfiles/${CATEGORY}/${PN}/${P}-crates.tar.xz
fi
