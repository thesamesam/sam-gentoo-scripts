#!/bin/bash
# Place into /etc/portage/repo.postsync.d/repo-patches and mark executable.
# Applies patches in /etc/portage/repo-patches/${repo_name}/*.patch after
# syncing the respective repo.
. /lib/gentoo/functions.sh

# TODO: PORTAGE_QUIET, PORTAGE_VERBOSE handling

repository_name=${1}
sync_uri=${2}
repository_path=${3}
patched_any=0
ret=0

shopt -s nullglob
patches=/etc/portage/repo-patches/${repository_name}/*.patch
if [[ -z "${patches[@]}" ]] ; then
	exit
fi

cd "${repository_path}" || exit 1

# TODO: Check if the repository is volatile
if git rev-parse --git-dir &> /dev/null ; then
	git -C "${repository_path}" clean -qfdx
	git -C "${repository_path}" reset --quiet --hard HEAD
fi

for patch in ${patches[@]} ; do
	patched_any=1

	ebegin "Applying ${patch}"
	if git -C "${repository_path}" apply --quiet --check "${patch}" ; then
		git -C "${repository_path}" apply --quiet "${patch}"
		ret=$?
	else
		ret=$?
		ewarn "Skipping ${patch} because dry run failed (already applied?)"
	fi

	eend ${ret}
done

if (( ${patched_any} )) ; then
	ebegin "Regenerating cache"

	if type -P pk > /dev/null && [[ -e "${repository_path}/profiles/eapi" ]]; then
		opts=(
			--quiet
			--jobs "$(nproc)"
		)

		if ! [[ -f "${repository_path}"/profiles/use.local.desc ]] ; then
			opts+=( --use-local )
		fi

		pk repo metadata regen "${opts[@]}" "${repository_path}"
	elif type -P pmaint > /dev/null ; then
		opts=(
			--quiet
			--threads "$(nproc)"

			--pkg-desc-index
		)

		if ! [[ -f "${repository_path}"/profiles/use.local.desc ]] ; then
			opts+=( --use-local-desc )
		fi

		pmaint regen "${opts[@]}" "${repository_name}"
	else
		opts=(
			--jobs "$(nproc)"
			--load-average "$(nproc)"
		)

		if ! [[ -f "${repository_path}"/profiles/use.local.desc ]] ; then
			opts+=( --update-use-local-desc )
		fi

		egencache --update "${opts[@]}" --repo "${repository_name}"
	fi

	eend $? || exit
fi
